package vistas;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Shape;
import java.awt.Font;
import java.awt.event.ActionListener;
import java.awt.geom.RoundRectangle2D;
import java.io.File;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

/**
 *
 * @author MagicPOS
 */
public class Reportes extends javax.swing.JFrame {

  public Color colorLetra = new Color(0, 0, 0);
  FondoPanel fondo = new FondoPanel();

  /**
   * Creates new form IniciarSesion
   */
  public Reportes() {
    this.setContentPane(fondo);
    initComponents();

  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    panelOpciones = new javax.swing.JPanel();
    etiquetaFiltros = new javax.swing.JLabel();
    etiquetaReporte = new javax.swing.JLabel();
    Separador = new javax.swing.JTextField();
    botonregresar2 = new RoundJButton(7);
    etiquetaTipo = new javax.swing.JLabel();
    comboTipo = new RoundJComboBox(7);
    etiquetaFF = new javax.swing.JLabel();
    dateFF = new rojeru_san.componentes.RSDateChooser();
    etiquetaFI = new javax.swing.JLabel();
    dateFI = new rojeru_san.componentes.RSDateChooser();
    panelContenedor = new javax.swing.JPanel();
    etiquetaLogo = new javax.swing.JLabel();
    etiquetaTitulo = new javax.swing.JLabel();
    etiquetaRuta = new javax.swing.JLabel();
    campoRuta = new RoundJTextField(7);
    botonDescargar = new RoundJButton(7);
    botonGuardar = new RoundJButton(7);

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setMinimumSize(new java.awt.Dimension(1080, 720));
    setResizable(false);
    setSize(new java.awt.Dimension(800, 550));

    panelOpciones.setBackground(new java.awt.Color(252, 168, 1));
    panelOpciones.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    etiquetaFiltros.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 40)); // NOI18N
    etiquetaFiltros.setForeground(new java.awt.Color(255, 255, 255));
    etiquetaFiltros.setText("Filtros del");
    panelOpciones.add(etiquetaFiltros, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 220, -1));

    etiquetaReporte.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 40)); // NOI18N
    etiquetaReporte.setForeground(new java.awt.Color(255, 255, 255));
    etiquetaReporte.setText("reporte");
    panelOpciones.add(etiquetaReporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 160, -1));

    Separador.setEditable(false);
    Separador.setBackground(new java.awt.Color(255, 212, 1));
    Separador.setFont(new java.awt.Font("Tahoma", 0, 3)); // NOI18N
    Separador.setBorder(null);
    Separador.setMinimumSize(new java.awt.Dimension(0, 0));
    panelOpciones.add(Separador, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 360, 10));

    botonregresar2.setBackground(new java.awt.Color(252, 168, 1));
    botonregresar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/regresar.png"))); // NOI18N
    botonregresar2.setBorder(null);
    botonregresar2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    panelOpciones.add(botonregresar2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 610, -1, -1));

    etiquetaTipo.setBackground(new java.awt.Color(252, 168, 1));
    etiquetaTipo.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
    etiquetaTipo.setText("Selec. el tipo de reporte");
    panelOpciones.add(etiquetaTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 170, -1, -1));

    comboTipo.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 16)); // NOI18N
    comboTipo.setForeground(new java.awt.Color(196, 196, 196));
    comboTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cierre de caja", "Reporte de ventas", "Reporte de inventario", "Reporte de merma" }));
    comboTipo.setBorder(null);
    panelOpciones.add(comboTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 290, 40));

    etiquetaFF.setBackground(new java.awt.Color(252, 168, 1));
    etiquetaFF.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
    etiquetaFF.setText("Fecha final");
    panelOpciones.add(etiquetaFF, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 370, -1, -1));

    dateFF.setColorBackground(new java.awt.Color(196, 196, 196));
    dateFF.setColorButtonHover(new java.awt.Color(254, 163, 88));
    dateFF.setColorDiaActual(new java.awt.Color(255, 80, 0));
    dateFF.setColorForeground(new java.awt.Color(196, 196, 196));
    dateFF.setFuente(new java.awt.Font("Arial Rounded MT Bold", 0, 16)); // NOI18N
    panelOpciones.add(dateFF, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, 290, -1));

    etiquetaFI.setBackground(new java.awt.Color(252, 168, 1));
    etiquetaFI.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
    etiquetaFI.setText("Fecha de inicio");
    panelOpciones.add(etiquetaFI, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, -1, -1));

    dateFI.setColorBackground(new java.awt.Color(196, 196, 196));
    dateFI.setColorButtonHover(new java.awt.Color(254, 163, 88));
    dateFI.setColorDiaActual(new java.awt.Color(255, 80, 0));
    dateFI.setColorForeground(new java.awt.Color(196, 196, 196));
    dateFI.setFuente(new java.awt.Font("Arial Rounded MT Bold", 0, 16)); // NOI18N
    panelOpciones.add(dateFI, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, 290, -1));

    panelContenedor.setBackground(new java.awt.Color(255, 255, 255));
    panelContenedor.setMaximumSize(new java.awt.Dimension(653, 363));
    panelContenedor.setMinimumSize(new java.awt.Dimension(653, 363));
    panelContenedor.setPreferredSize(new java.awt.Dimension(653, 363));
    panelContenedor.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    etiquetaLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/logoHorizontal.png"))); // NOI18N
    panelContenedor.add(etiquetaLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

    etiquetaTitulo.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 44)); // NOI18N
    etiquetaTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    etiquetaTitulo.setText("Reportes");
    panelContenedor.add(etiquetaTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, -1, -1));

    etiquetaRuta.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
    etiquetaRuta.setText("Indique la ruta de descarga:");
    panelContenedor.add(etiquetaRuta, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));

    campoRuta.setBackground(new java.awt.Color(231, 231, 231));
    campoRuta.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 16)); // NOI18N
    campoRuta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    campoRuta.setBorder(null);
    campoRuta.setEnabled(false);
    campoRuta.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mousePressed(java.awt.event.MouseEvent evt) {
        campoRutaMousePressed(evt);
      }
    });
    panelContenedor.add(campoRuta, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, 550, 30));

    botonDescargar.setBackground(new java.awt.Color(255, 185, 102));
    botonDescargar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
    botonDescargar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/descargar.png"))); // NOI18N
    botonDescargar.setText("Descargar reporte");
    botonDescargar.setBorder(null);
    botonDescargar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    botonDescargar.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseEntered(java.awt.event.MouseEvent evt) {
        botonDescargarMouseEntered(evt);
      }
      public void mouseExited(java.awt.event.MouseEvent evt) {
        botonDescargarMouseExited(evt);
      }
    });
    botonDescargar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        botonDescargarActionPerformed(evt);
      }
    });
    panelContenedor.add(botonDescargar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 290, 230, 60));

    botonGuardar.setBackground(new java.awt.Color(255, 255, 255));
    botonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/guardar.png"))); // NOI18N
    botonGuardar.setBorder(null);
    botonGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    botonGuardar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        botonGuardarActionPerformed(evt);
      }
    });
    panelContenedor.add(botonGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 190, -1, -1));

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(panelContenedor, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(panelOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(panelContenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(panelOpciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void campoRutaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_campoRutaMousePressed

  }//GEN-LAST:event_campoRutaMousePressed

  private void botonDescargarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonDescargarMouseEntered
    // TODO add your handling code here:
    botonDescargar.setBackground(new Color(255, 109, 0));
  }//GEN-LAST:event_botonDescargarMouseEntered

  private void botonDescargarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonDescargarMouseExited
    botonDescargar.setBackground(new Color(255, 185, 102));
  }//GEN-LAST:event_botonDescargarMouseExited

  private void botonDescargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDescargarActionPerformed
    Icon icono = new ImageIcon(getClass().getResource("/assets/bobReportes.png"));

    JOptionPane.showMessageDialog(rootPane, "Este apartado se encuentra en desarrollo", "Alerta", JOptionPane.PLAIN_MESSAGE, icono);
  }//GEN-LAST:event_botonDescargarActionPerformed

  private void botonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarActionPerformed
    JFileChooser fileChooser = new JFileChooser();
    fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    if (fileChooser.showSaveDialog(dateFF) == JFileChooser.APPROVE_OPTION) {
      File file = fileChooser.getSelectedFile();
      campoRuta.setText(file.getAbsolutePath());
    } else {
      JOptionPane.showMessageDialog(rootPane, "No se seleccionó ninguna ruta de almacenamiento", "Alerta", JOptionPane.PLAIN_MESSAGE);
    }
  }//GEN-LAST:event_botonGuardarActionPerformed

  /**
   * @param args the command line arguments
   */
  //  public static void main(String args[]) {
  //    /* Set the Nimbus look and feel */
  //    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
  //    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
  //         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
  //     */
  //    try {
  //      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
  //        if ("Nimbus".equals(info.getName())) {
  //          javax.swing.UIManager.setLookAndFeel(info.getClassName());
  //          break;
  //        }
  //      }
  //    } catch (ClassNotFoundException ex) {
  //      java.util.logging.Logger.getLogger(IniciarSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
  //    } catch (InstantiationException ex) {
  //      java.util.logging.Logger.getLogger(IniciarSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
  //    } catch (IllegalAccessException ex) {
  //      java.util.logging.Logger.getLogger(IniciarSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
  //    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
  //      java.util.logging.Logger.getLogger(IniciarSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
  //    }
  //    //</editor-fold>
  //
  //    /* Create and display the form */
  //    java.awt.EventQueue.invokeLater(new Runnable() {
  //      public void run() {
  //        new IniciarSesion().setVisible(true);
  //      }
  //    });
  //  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextField Separador;
  private javax.swing.JButton botonDescargar;
  private javax.swing.JButton botonGuardar;
  private javax.swing.JButton botonregresar2;
  private javax.swing.JTextField campoRuta;
  private javax.swing.JComboBox<String> comboTipo;
  private rojeru_san.componentes.RSDateChooser dateFF;
  private rojeru_san.componentes.RSDateChooser dateFI;
  private javax.swing.JLabel etiquetaFF;
  private javax.swing.JLabel etiquetaFI;
  private javax.swing.JLabel etiquetaFiltros;
  private javax.swing.JLabel etiquetaLogo;
  private javax.swing.JLabel etiquetaReporte;
  private javax.swing.JLabel etiquetaRuta;
  private javax.swing.JLabel etiquetaTipo;
  private javax.swing.JLabel etiquetaTitulo;
  private javax.swing.JPanel panelContenedor;
  private javax.swing.JPanel panelOpciones;
  // End of variables declaration//GEN-END:variables

  class FondoPanel extends JPanel {

    private Image imagen;

    public void paint(Graphics g) {
      imagen = new ImageIcon(getClass().getResource("/assets/fondoGeneral.jpg")).getImage();
      g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
      setOpaque(false);
      super.paint(g);
    }

  }

  class RoundJTextField extends JTextField {

    private Shape shape;

    public RoundJTextField(int size) {
      super(size);
      setOpaque(false); // As suggested by @AVD in comment.
    }

    protected void paintComponent(Graphics g) {
      g.setColor(getBackground());
      g.fillRoundRect(0, 0, getWidth() - 1, getHeight() - 1, 15, 15);
      super.paintComponent(g);
    }

    protected void paintBorder(Graphics g) {
      g.setColor(new Color(208, 208, 208));
      g.drawRoundRect(0, 0, getWidth() - 1, getHeight() - 1, 15, 15);
    }

    public boolean contains(int x, int y) {
      if (shape == null || !shape.getBounds().equals(getBounds())) {
        shape = new RoundRectangle2D.Float(0, 0, getWidth() - 1, getHeight() - 1, 15, 15);
      }
      return shape.contains(x, y);
    }
  }

  class RoundJPasswordField extends JPasswordField {

    private Shape shape;

    public RoundJPasswordField(int size) {
      super(size);
      setOpaque(false); // As suggested by @AVD in comment.
    }

    protected void paintComponent(Graphics g) {
      g.setColor(getBackground());
      g.fillRoundRect(0, 0, getWidth() - 1, getHeight() - 1, 15, 15);
      super.paintComponent(g);
    }

    protected void paintBorder(Graphics g) {
      g.setColor(new Color(208, 208, 208));
      g.drawRoundRect(0, 0, getWidth() - 1, getHeight() - 1, 15, 15);
    }

    public boolean contains(int x, int y) {
      if (shape == null || !shape.getBounds().equals(getBounds())) {
        shape = new RoundRectangle2D.Float(0, 0, getWidth() - 1, getHeight() - 1, 15, 15);
      }
      return shape.contains(x, y);
    }
  }

  class RoundJButton extends JButton {

    private Shape shape;

    public RoundJButton(int size) {
      setOpaque(false); // As suggested by @AVD in comment.
    }

    protected void paintComponent(Graphics g) {
      g.setColor(getBackground());
      g.fillRoundRect(0, 0, getWidth() - 1, getHeight() - 1, 15, 15);
      super.paintComponent(g);
    }

    protected void paintBorder(Graphics g) {
      g.setColor(Color.WHITE);
      g.drawRoundRect(0, 0, getWidth() - 1, getHeight() - 1, 15, 15);
    }

    public boolean contains(int x, int y) {
      if (shape == null || !shape.getBounds().equals(getBounds())) {
        shape = new RoundRectangle2D.Float(0, 0, getWidth() - 1, getHeight() - 1, 15, 15);
      }
      return shape.contains(x, y);
    }
  }

  class RoundJComboBox extends JComboBox {

    private Shape shape;

    public RoundJComboBox(int size) {
      super();
      setOpaque(false); // As suggested by @AVD in comment.
    }

    protected void paintComponent(Graphics g) {
      g.setColor(getBackground());
      g.fillRoundRect(0, 0, getWidth() - 1, getHeight() - 1, 15, 15);
      super.paintComponent(g);
    }

    protected void paintBorder(Graphics g) {
      g.setColor(new Color(208, 208, 208));
      g.drawRoundRect(0, 0, getWidth() - 1, getHeight() - 1, 15, 15);
    }

    public boolean contains(int x, int y) {
      if (shape == null || !shape.getBounds().equals(getBounds())) {
        shape = new RoundRectangle2D.Float(0, 0, getWidth() - 1, getHeight() - 1, 15, 15);
      }
      return shape.contains(x, y);
    }
  }

}
